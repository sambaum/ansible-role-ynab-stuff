# bank2ynab configuration file

[DEFAULT]
# Specify where you save your downloaded CSV files:
Source Path = {{ ynab_bank2ynab_git_source_path_csv }}
# CHANGING ANYTHING BELOW THIS LINE WILL PROBABLY BREAK THINGS HORRIBLY. DON'T DO IT!
# Direct bank download - not currently implemented in any way!
Bank Download = False
Bank Download URL =
Bank Download Login =
Bank Download Auth1 =
Bank Download Auth2 =
# Filename search
Source Filename Pattern = example_transaction_export_filename
Source Filename Extension = .csv
Use Regex for Filename = False
# Source file formatting
Source CSV Delimiter = ,
Header Rows = 1
Footer Rows = 0
Input Columns = Date,Payee,Outflow,Inflow,Running Balance
# (see https://docs.python.org/2/library/datetime.html#id1 for date format strings)
Date Format =
Inflow or Outflow Indicator =
# Output file formatting
Output Columns = Date,Payee,Category,Memo,Outflow,Inflow
Output Filename Prefix = fixed_
Use Payee for Memo = True
# Post-processing
Delete Source File = True
# Plugins
Plugin =

#####################################################################################################
# ADD CUSTOM BANKS BELOW.
# Just make a new [section heading] and copy only the lines from above that need a non-default value.
# Please keep this sorted alphabetically by [country + bank name] for easier maintenance.
#####################################################################################################
# DATE FORMATS:
# %y   2-digit year
# %Y   4-digit year
# %m   2-digit month number
# %b   3-char month name
# %B   full month name
# %d   2-digit day of the month
# %H   2-digit hour (24h)
# %M   2-digit minutes
# %S   2-digit seconds
# .-/:  Specify delimiter as provided in the input
# (see https://docs.python.org/2/library/datetime.html#id1 for date format strings)
#####################################################################################################

[AT easybank credit card]
# EASYBANK_Umsatzliste_20181009_2051.csv
Use Regex For Filename = True
Source Filename Pattern = EASYBANK_Umsatzliste_20[0-9]{6}_[0-9]{4}
Source CSV Delimiter = ;
Header Rows = 0
Input Columns = skip,Memo,skip,Date,Inflow,skip

[AT Raiffeisen Bank]
# elbi_umsaetze_20123456789012.csv
Use Regex For Filename = True
Source Filename Pattern = elbi_umsaetze_20[0-9]{12}
Source CSV Delimiter = ;
Header Rows = 0
Input Columns = skip,Memo,Date,Inflow,skip,skip,skip

[AT Raiffeisen VISA]
# finstatus_20123456789012.csv
Use Regex For Filename = True
Source Filename Pattern = finstatus_20[0-9]{12}
Source CSV Delimiter = ;
Header Rows = 0
Input Columns = skip,Date,Memo,skip,skip,skip,Inflow

[BE KBC checking]
# source: survey response #25
# export_BE11123456789012_20180304_1422.csv
Use Regex For Filename = True
Source Filename Pattern = export_BE[0-9]{14}_[0-9]{8}_[0-9]{4}
Source CSV Delimiter = ;
Input Columns = skip,skip,skip,skip,skip,Date,Memo,skip,Inflow,skip,skip,skip,skip,skip,skip,skip,skip,skip
Date Format = %d/%m/%Y

[BR Inter, checking]
# source: survey response #17
# Extrato.csv
Source Filename Pattern = Extrato
Input Columns = Date,Payee,Inflow,skip

[CA TD Canada Trust, checking+Visa]
# source: survey response #26
Source Filename Pattern = accountactivity
Header Rows = 0
Input Columns = Date,Payee,Outflow,Inflow,skip
Date Format = %m/%d/%Y

[CZ Ceska Sporitelna]
# Single page output: TH_20180520-20180520
# Paginated (Czech): TH_20180101-20180520_strana_1
# Paginated (English): TH_20180101-20180520_page_1
Use Regex For Filename = True
Source Filename Pattern = TH_[0-9]{8}-[0-9]{8}(_(page|strana)_[0-9])?
Source CSV Delimiter = ;
Header Rows = 1
Input Columns = skip,Date,Inflow,Payee,skip,skip,skip,skip,skip,skip,Memo
Date Format = %Y/%m/%d

[CZ Raiffeisen bank]
# Pohyby_1234512345_201805201112.csv (Czech)
# Movements_1234512345_201805201112.csv (English)
Use Regex For Filename = True
Source Filename Pattern = (Pohyby|Movements)_[0-9]{10}_[0-9]{12}
Source CSV Delimiter = ;
Header Rows = 1
Input Columns = Date,skip,skip,skip,skip,Payee,skip,skip,Memo,skip,skip,skip,skip,Inflow
Date Format = %d.%m.%Y

[DE Commerzbank checking]
# source: survey response #24
Use Regex For Filename = True
Source Filename Pattern = Umsaetze_KtoNr[0-9]{9}_EUR_[0-9]{2}-[0-9]{2}-[0-9]{4}_[0-9]{4}
Source Filename Extension = .CSV
Header Rows = 1
Source CSV Delimiter = ;
Input Columns = Date,skip,skip,Payee,Inflow,skip,skip,skip,skip

[DE Consorsbank checking]
# source: survey response #36
Use Regex for Filename = True
Source Filename Pattern = Umsatz√ºbersicht_[0-9]{9}
Source CSV Delimiter = ;
Input Columns = Date,skip,Payee,skip,skip,skip,Memo,Inflow
Date Format = %d.%m.%Y

[DE Deutsche Bank]
# source: Issue #131
Source Filename Pattern = unknown!
# The default filename is unknown! Please submit an issue if you know the name! See details here:
# https://github.com/bank2ynab/bank2ynab/wiki/MissingDefaultFilename
Header Rows = 5
Footer Rows = 1
Source CSV Delimiter = ;
Input Columns = Date,skip,skip,skip,skip,skip,Inflow,skip

# disabling this until #182 has been resolved!
# [DE Deutsche Kreditbank checking]
# # source: Issue #132
# # 1234567890.csv
# Use Regex For Filename = True
# Source Filename Pattern = [0-9]{10}
# Header Rows = 7
# Source CSV Delimiter = ;
# Input Columns = skip,Date,Memo,Payee,skip,skip,skip,Inflow,skip,skip,skip

[DE Deutsche Kreditbank credit card]
# source: Issue #132
# 1234________1234.csv
Use Regex For Filename = True
Source Filename Pattern = \d{4}_{8}\d{4}
Header Rows = 7
Source CSV Delimiter = ;
Input Columns = skip,skip,Date,Memo,Inflow,skip

[DE ING-DiBa]
Use Regex For Filename = True
# Umsatzanzeige_1234567890_12345678.csv
Source Filename Pattern = Umsatzanzeige_DE[0-9]{20}_[0-9]{8}
Source CSV Delimiter = ;
Header Rows = 13
Input Columns = Date,skip,Payee,skip,Memo,skip,skip,Inflow,skip

[DE Kreissparkasse]
# source: Issue #145
Source Filename Pattern = unknown!
# The default filename is unknown! Please submit an issue if you know the name! See details here:
# https://github.com/bank2ynab/bank2ynab/wiki/MissingDefaultFilename
Source CSV Delimiter = ;
Input Columns = Date,Payee,skip,skip,skip,Inflow,skip,skip

[DE N26]
# source: survey response #15
# 20171001-20171106.csv
Use Regex For Filename = True
Source Filename Pattern = 20[0-9]{6}-20[0-9]{6}
Input Columns = Date,Payee,skip,skip,skip,skip,Inflow,skip,skip,skip

[DE Ostseesparkasse Rostock checking]
Use Regex for Filename = True
# 12345678-1234567890-umsatz.csv
Source Filename Pattern = [0-9]{8}-[0-9]{10}-umsatz
Source Filename Extension = .CSV
Source CSV Delimiter = ;
Input Columns = skip,skip,Date,skip,Memo,Payee,skip,skip,Inflow,skip,skip
Date Format = %d.%m.%y

[DE Ostseesparkasse Rostock credit card]
# umsatz-1234________1234-20180227.csv
Use Regex for Filename = True
Source Filename Pattern = umsatz-[0-9]{4}_{8}[0-9]{4}-[0-9]{8}
Source Filename Extension = .CSV
Source CSV Delimiter = ;
Input Columns = skip,skip,Date,skip,skip,skip,Inflow,skip,Payee,Memo,skip,skip,skip,skip,skip,skip
Date Format = %d.%m.%y

[DE Sparkasse Rhein-Neckar-Nord]
# source: Issue #148
# 12345678-12345678-umsatz.csv
Use Regex For Filename = True
Source Filename Pattern = [0-9]{8}-[0-9]{8}-umsatz
Input Columns = skip,Date,skip,Memo,skip,skip,skip,skip,skip,skip,skip,Payee,skip,skip,Inflow,skip,skip

[DK Bankernes EDB Central]
# Support for all banks with a solution produced by Bankernes EDB Central
# Tested Banks: Arbejdernes Landsbank, Merkur Andelskasse, DK Handelsbanken,
# add more here..
Source Filename Pattern = Posteringer
Source CSV Delimiter = ;
Header Rows = 0
Input Columns = Date,Payee,Inflow,Running Balance
Date Format = %d-%m-%Y

[DK Nordea]
# source: Issue #92
Source Filename Pattern = unknown!
# The default filename is unknown! Please submit an issue if you know the name! See details here:
# https://github.com/bank2ynab/bank2ynab/wiki/MissingDefaultFilename
Source CSV Delimiter = ;
Input Columns = Date,Payee,skip,Inflow,skip

[DK Sparkassen Thy]
Source Filename Pattern = export
Source CSV Delimiter = ;
Header Rows = 0
Input Columns = skip,Date,Payee,Inflow,Running Balance
Date Format = %d-%m-%Y

[IE AIB Ireland]
# source: survey response #16
# Transaction_Export_12.12.2012_12.12.csv
Use Regex For Filename = True
Source Filename Pattern = Transaction_Export_[0-9]{2}.[0-9]{2}.20[0-9]{2}_[0-9]{2}.[0-9]{2}
Input Columns = skip,Date,Payee,Inflow,Outflow,skip,skip

[IE Bank of Ireland]
# TransactionExport.csv
Source Filename Pattern = TransactionExport
Input Columns = Date,Payee,Outflow,Inflow,skip

[MV Bank of Maldives, checking]
# source: survey response #18
# statement.csv
Use Regex For Filename = True
Source Filename Pattern = statement\.
Input Columns = Date,skip,skip,skip,skip,Memo,skip,skip,Inflow,Outflow,skip

[NL Bunq checking]
# source: survey response #28
Use Regex for Filename = True
# 2018-04-14_10-52-13_bunq-transactieoverzicht
Source Filename Pattern = [0-9]{4}-[0-9]{2}-[0-9]{2}_[0-9]{2}-[0-9]{2}-[0-9]{2}_bunq-transactieoverzicht
Header Rows = 1
Input Columns = Date,Inflow,skip,skip,Payee,Memo
Date Format = %Y-%m-%d

[NL ING]
# NL12INGB123456789_12_12_2012_12_12_2012.csv
Use Regex for Filename = True
Source Filename Pattern = NL[0-9]{2}INGB[0-9]{9}_[0-9]{2}_[0-9]{2}_20[0-9]{2}_[0-9]{2}_[0-9]{2}_20[0-9]{2}
Header Rows = 1
Footer Rows = 0
Input Columns = Date,Payee,skip,skip,skip,CDFlag,Inflow,skip,Memo
Date Format = %Y%m%d
Inflow or Outflow Indicator = 5,Af,Bij

[NL Rabobank]
# source: survey response #14
# transactions.txt
Source Filename Pattern = transactions
Source Filename Extension = .txt
Source Has Column Headers = False
Input Columns = skip,skip,Date,CDFlag,Inflow,skip,Payee,skip,skip,skip,Memo,skip
Date Format = %Y%m%d
Inflow or Outflow Indicator = 3,C,D

[NL Rabobank-2018]
# CSV_A_20180414_112204.csv
Use Regex for Filename = True
Source Filename Pattern = CSV_A_20[0-9]{6}_[0-9]{6}
# "IBAN/BBAN","Munt","BIC","Volgnr","Datum","Rentedatum","Bedrag","Saldo na trn","Tegenrekening IBAN/BBAN","Naam tegenpartij","Naam uiteindelijke partij","Naam initi√´rende partij","BIC tegenpartij","Code","Batch ID","Transactiereferentie","Machtigingskenmerk","Incassant ID","Betalingskenmerk","Omschrijving-1","Omschrijving-2","Omschrijving-3","Reden retour","Oorspr bedrag","Oorspr munt","Koers"
Input Columns = skip,skip,skip,skip,Date,skip,Inflow,skip,skip,Payee,skip,skip,skip,skip,skip,skip,skip,skip,skip,Memo,skip,skip,skip,skip,skip,skip
Date Format = %Y-%m-%d

[NO DNB]
# maanedtransaksjonliste-[a-z]{3}.csv
Use Regex for Filename = True
Source Filename Pattern = maanedtransaksjonliste-[a-z]{3}
Source CSV Delimiter = ;
Input Columns = Date,Payee,skip,Outflow,Inflow

[Personal Capital]
# source: Issue #144
# Feb 12-2012 thru Apr 12-2012 transactions.csv
Use Regex For Filename = True
Source Filename Pattern = [A-Z][a-z]{2} [0-9]{2}-[0-9]{4} thru [A-Z][a-z]{2} [0-9]{2}-[0-9]{4} transactions
Header Rows = 1
Input Columns = Date,Payee,Memo,skip,skip,Inflow

[SE Handelsbanken]
# kontotransactionlist.xls
Source Filename Pattern = kontotransactionlist
Source Filename Extension = .xls
Input Columns = skip,Date,Payee,Inflow,skip
Source CSV Delimiter = ;
Header Rows = 7
Plugin = handelsbanken

[SE Nordea]
# source: Issue #92
# export.csv
Source Filename Pattern = export
Source CSV Delimiter = ,
Header Rows = 1
Footer Rows = 1
Input Columns = Date,Payee,Outflow,Inflow,Running Balance
Date Format = %Y-%m-%d

[SE Swedbank]
# source: Issue #134
# exported.csv
Source Filename Pattern = exported
Header Rows = 2
Footer Rows = 3
Input Columns = skip,skip,Date,Payee,Memo,Inflow,skip,CDFlag,skip,skip,skip,skip,skip,skip,skip
Inflow or Outflow Indicator = 7,K,D

[SG OCBC Bank]
Use Regex For Filename = True
Source Filename Pattern = TransactionHistory_\d{4}\d{2}\d{2}\d{6}
Header Rows = 6
Footer Rows = 2
Input Columns = Date,skip,Memo,Outflow,Inflow,Payee
Date Format = %d/%m/%Y
Plugin = OCBC_Bank_SG

[SG POSB savings]
# source: survey response #23
Source Filename Pattern = [0-9a-z]{32}.[A-Z][0-9]{15}
Use Regex for Filename = True
Header Rows = 0
Input Columns = Date,skip,Outflow,Inflow,Payee,Memo,skip
Date Format = %d %b %Y

[UK Co-operative Bank]
# 123456_12345678_2012-12-12.csv
Use Regex for Filename = True
Source Filename Pattern = [0-9]{6}_[0-9]{8}_[0-9]{4}-[0-9]{2}-[0-9]{2}
Input Columns = Date,Payee,Memo,Inflow,Outflow,skip

[UK Monzo checking]
# MonzoDataExport_February2018_2018-02-26_174335.csv
Source Filename Pattern = MonzoDataExport_(January|February|March|April|May|June|July|August|September|October|November|December)[0-9]{4}_[0-9]{4}-[0-9]{2}-[0-9]{2}_[0-9]{6}
Use Regex for Filename = True
Input Columns = skip,Date,Inflow,skip,skip,skip,Category,skip,Payee,skip,Memo,skip
Date Format = %Y-%m-%d %H:%M:%S +0000

[UK Barclaycard credit card]
# statement_1.csv
Source Filename Pattern = statement_[0-9]{1}
Use Regex for Filename = True
Header Rows = 0
Input Columns = Date,Payee,skip,skip,skip,Category,Inflow,Outflow
Date Format = %d %b %y

[UK first direct checking]
# 20123456_12345678.csv
Source Filename Pattern = 20[0-9]{6}_[0-9]{8}
Use Regex for Filename = True
Input Columns = Date,Payee,Inflow,skip

[US BB&T]
# source: Issue #115
# EXPORT.CSV
Source Filename Pattern = EXPORT
Source Filename Extension = .CSV
Header Rows = 1
Footer Rows = 0
Input Columns = Date,skip,skip,Payee,Inflow,skip

[US Schwab]
# source: Issue #122
Source Filename Pattern = unknown!
# The default filename is unknown! Please submit an issue if you know the name! See details here:
# https://github.com/bank2ynab/bank2ynab/wiki/MissingDefaultFilename
Source Filename Extension = .csv
Header Rows = 3
Footer Rows = 0
Input Columns = Date,skip,skip,Payee,Outflow,Inflow,skip
Date Format = %m/%d/%Y

[US TB Bank]
# source: Issue #123
Source Filename Pattern = unknown!
# The default filename is unknown! Please submit an issue if you know the name! See details here:
# https://github.com/bank2ynab/bank2ynab/wiki/MissingDefaultFilename
Source Filename Extension = .csv
Header Rows = 0
Footer Rows = 0
Input Columns = Date,skip,skip,skip,Payee,Outflow,Inflow,skip,skip,skip
Date Format = %m/%d/%Y

{% for bank in ynab_bank2ynab_banks %}
[{{ bank.name}}]
Use Regex For Filename = {{ bank.use_regex }}
Source Filename Pattern = {{ bank.source_filename_pattern }}
Header Rows = {{ bank.header_rows }}
Input Columns = {{ bank.input_columns }}
Date Format = {{ bank.date_format }}
Source CSV Delimiter = {{ bank.source_csv_delimiter }}
{% endfor %}
